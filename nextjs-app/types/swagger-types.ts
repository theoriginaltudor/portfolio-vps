/**
 * This file was auto-generated by openapi-typescript.
 * Do not make direct changes to the file.
 */

export interface paths {
    "/api/DataTransfer/images": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        post: {
            parameters: {
                query?: never;
                header?: never;
                path?: never;
                cookie?: never;
            };
            requestBody?: {
                content: {
                    "application/json": {
                        [key: string]: string;
                    }[];
                    "text/json": {
                        [key: string]: string;
                    }[];
                    "application/*+json": {
                        [key: string]: string;
                    }[];
                };
            };
            responses: {
                /** @description OK */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content?: never;
                };
            };
        };
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/DataTransfer/projects": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        post: {
            parameters: {
                query?: never;
                header?: never;
                path?: never;
                cookie?: never;
            };
            requestBody?: {
                content: {
                    "application/json": components["schemas"]["ProjectDto"][];
                    "text/json": components["schemas"]["ProjectDto"][];
                    "application/*+json": components["schemas"]["ProjectDto"][];
                };
            };
            responses: {
                /** @description OK */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content?: never;
                };
            };
        };
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/DataTransfer/skills": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        post: {
            parameters: {
                query?: never;
                header?: never;
                path?: never;
                cookie?: never;
            };
            requestBody?: {
                content: {
                    "application/json": components["schemas"]["SkillDto"][];
                    "text/json": components["schemas"]["SkillDto"][];
                    "application/*+json": components["schemas"]["SkillDto"][];
                };
            };
            responses: {
                /** @description OK */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content?: never;
                };
            };
        };
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/DataTransfer/project-skills": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        post: {
            parameters: {
                query?: never;
                header?: never;
                path?: never;
                cookie?: never;
            };
            requestBody?: {
                content: {
                    "application/json": components["schemas"]["ProjectSkillDto"][];
                    "text/json": components["schemas"]["ProjectSkillDto"][];
                    "application/*+json": components["schemas"]["ProjectSkillDto"][];
                };
            };
            responses: {
                /** @description OK */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content?: never;
                };
            };
        };
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/DataTransfer/project-assets": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        post: {
            parameters: {
                query?: never;
                header?: never;
                path?: never;
                cookie?: never;
            };
            requestBody?: {
                content: {
                    "application/json": components["schemas"]["ProjectAssetDto"][];
                    "text/json": components["schemas"]["ProjectAssetDto"][];
                    "application/*+json": components["schemas"]["ProjectAssetDto"][];
                };
            };
            responses: {
                /** @description OK */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content?: never;
                };
            };
        };
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/Project": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get: {
            parameters: {
                query?: never;
                header?: never;
                path?: never;
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description OK */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "text/plain": components["schemas"]["Project"][];
                        "application/json": components["schemas"]["Project"][];
                        "text/json": components["schemas"]["Project"][];
                    };
                };
            };
        };
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/ProjectAsset": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get: {
            parameters: {
                query?: never;
                header?: never;
                path?: never;
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description OK */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "text/plain": components["schemas"]["ProjectAsset"][];
                        "application/json": components["schemas"]["ProjectAsset"][];
                        "text/json": components["schemas"]["ProjectAsset"][];
                    };
                };
            };
        };
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/ProjectSearch/search": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        post: {
            parameters: {
                query?: never;
                header?: never;
                path?: never;
                cookie?: never;
            };
            requestBody?: {
                content: {
                    "application/json": components["schemas"]["SearchRequest"];
                    "text/json": components["schemas"]["SearchRequest"];
                    "application/*+json": components["schemas"]["SearchRequest"];
                };
            };
            responses: {
                /** @description OK */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "text/plain": components["schemas"]["ProjectSearchResult"][];
                        "application/json": components["schemas"]["ProjectSearchResult"][];
                        "text/json": components["schemas"]["ProjectSearchResult"][];
                    };
                };
            };
        };
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/ProjectSkill": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get: {
            parameters: {
                query?: never;
                header?: never;
                path?: never;
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description OK */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "text/plain": components["schemas"]["ProjectSkill"][];
                        "application/json": components["schemas"]["ProjectSkill"][];
                        "text/json": components["schemas"]["ProjectSkill"][];
                    };
                };
            };
        };
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/Skill": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get: {
            parameters: {
                query?: never;
                header?: never;
                path?: never;
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description OK */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "text/plain": components["schemas"]["Skill"][];
                        "application/json": components["schemas"]["Skill"][];
                        "text/json": components["schemas"]["Skill"][];
                    };
                };
            };
        };
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
}
export type webhooks = Record<string, never>;
export interface components {
    schemas: {
        Project: {
            /** Format: int32 */
            id?: number;
            slug: string;
            title: string;
            description: string;
            longDescription: string;
            embedding?: components["schemas"]["Vector"];
            /** Format: date-time */
            createdAt?: string;
            /** Format: date-time */
            updatedAt?: string | null;
            projectSkills?: components["schemas"]["ProjectSkill"][] | null;
            projectAssets?: components["schemas"]["ProjectAsset"][] | null;
        };
        ProjectAsset: {
            /** Format: int32 */
            id?: number;
            path: string;
            /** Format: int32 */
            projectId?: number;
            project?: components["schemas"]["Project"];
            /** Format: date-time */
            createdAt?: string;
            /** Format: date-time */
            updatedAt?: string | null;
        };
        ProjectAssetDto: {
            projectSlug?: string | null;
            path?: string | null;
            /** Format: date-time */
            createdAt?: string | null;
        };
        ProjectDto: {
            slug?: string | null;
            title?: string | null;
            description?: string | null;
            longDescription?: string | null;
            embedding?: number[] | null;
            /** Format: date-time */
            createdAt?: string | null;
        };
        ProjectSearchResult: {
            slug?: string | null;
            title?: string | null;
            description?: string | null;
            longDescription?: string | null;
            /** Format: double */
            similarity?: number;
        };
        ProjectSkill: {
            /** Format: int32 */
            projectId?: number;
            project?: components["schemas"]["Project"];
            /** Format: int32 */
            skillId?: number;
            skill?: components["schemas"]["Skill"];
            /** Format: date-time */
            createdAt?: string;
        };
        ProjectSkillDto: {
            projectSlug?: string | null;
            skillName?: string | null;
            /** Format: date-time */
            createdAt?: string | null;
        };
        SearchRequest: {
            queryEmbedding?: number[] | null;
            /** Format: double */
            matchThreshold?: number;
            /** Format: int32 */
            matchCount?: number;
        };
        SingleReadOnlyMemory: {
            /** Format: int32 */
            readonly length?: number;
            readonly isEmpty?: boolean;
            span?: components["schemas"]["SingleReadOnlySpan"];
        };
        SingleReadOnlySpan: {
            /** Format: int32 */
            readonly length?: number;
            readonly isEmpty?: boolean;
        };
        Skill: {
            /** Format: int32 */
            id?: number;
            name: string;
            /** Format: date-time */
            createdAt?: string;
            /** Format: date-time */
            updatedAt?: string | null;
            projectSkills?: components["schemas"]["ProjectSkill"][] | null;
        };
        SkillDto: {
            name?: string | null;
            /** Format: date-time */
            createdAt?: string | null;
        };
        Vector: {
            memory?: components["schemas"]["SingleReadOnlyMemory"];
        };
    };
    responses: never;
    parameters: never;
    requestBodies: never;
    headers: never;
    pathItems: never;
}
export type $defs = Record<string, never>;
export type operations = Record<string, never>;
