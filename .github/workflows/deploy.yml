name: Deploy to VPS

on:
  push:
    branches: [main] # Adjust branch name if needed

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Install SSH key
        uses: shimataro/ssh-key-action@v2
        with:
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          known_hosts: unnecessary
          if_key_exists: replace

      - name: Adding Known Hosts
        run: ssh-keyscan -H ${{ secrets.SSH_HOST }} >> ~/.ssh/known_hosts

      - name: Deploy with rsync
        run: |
          rsync -avz \
            --exclude '.git/' \
            --exclude '.github/' \
            --exclude '.env' \
            --exclude 'nextjs-app/.env.local' \
            --exclude 'nextjs-app/node_modules/' \
            --exclude 'nextjs-app/.next/' \
            --exclude 'nextjs-app/package-lock.json' \
            --exclude 'aspnet-api/images' \
            --exclude 'aspnet-api/PortfolioBack/bin/' \
            --exclude 'aspnet-api/PortfolioBack/obj/' \
            --exclude 'aspnet-api/PortfolioBack/*.dll' \
            compose.yaml portfolio-vps.sln \
            aspnet-api nextjs-app nginx \
            ${{ vars.SSH_USER }}@${{ secrets.SSH_HOST }}:${{ vars.DEPLOY_PATH }}

      - name: Execute remote commands
        run: |
          ssh ${{ vars.SSH_USER }}@${{ secrets.SSH_HOST }} << 'EOF'
            cd ${{ vars.DEPLOY_PATH }}
            # Create .env file
            echo "POSTGRES_DB=${{ vars.POSTGRES_DB }}" > .env
            echo "POSTGRES_USER=${{ vars.POSTGRES_USER }}" >> .env
            echo "POSTGRES_PASSWORD=${{ secrets.POSTGRES_PASSWORD }}" >> .env
            # Create nextjs-app/.env.local file
            echo "GOOGLE_GENERATIVE_AI_API_KEY=${{ secrets.GOOGLE_GENERATIVE_AI_API_KEY }}" > nextjs-app/.env.local
            echo "NEXT_PUBLIC_SUPABASE_URL=${{ vars.NEXT_PUBLIC_SUPABASE_URL }}" >> nextjs-app/.env.local
            echo "NEXT_PUBLIC_SUPABASE_PROJECT_ID=${{ vars.NEXT_PUBLIC_SUPABASE_PROJECT_ID }}" >> nextjs-app/.env.local
            echo "NEXT_PUBLIC_SUPABASE_ANON_KEY=${{ secrets.NEXT_PUBLIC_SUPABASE_ANON_KEY }}" >> nextjs-app/.env.local
            echo "SUPABASE_SERVICE_ROLE_KEY=${{ secrets.SUPABASE_SERVICE_ROLE_KEY }}" >> nextjs-app/.env.local
            echo "NEXT_PUBLIC_IMAGE_URL=http://${{ secrets.SSH_HOST }}:80/images" >> nextjs-app/.env.local
            # Optionally restore/build dependencies here
            # cd nextjs-app && npm ci && cd ..
            # cd aspnet-api/PortfolioBack && dotnet restore && cd ../..
            sudo docker compose -f compose.yaml down
            sudo docker compose -f compose.yaml up --build -d
          EOF
